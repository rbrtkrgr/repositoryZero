name: Signed Commit Test

on:
  workflow_dispatch:

jobs:
  add-file:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          ref: "main"
      - name: Make Change(s)
        run: |
          echo "testing" >> newfile.txt
          
      - name: Detect changed files
        id: changes
        run: |
          git config --global user.email "rbrtkrgr@icloud.com"
          git config --global user.name "rbrtkrgr"
          git add .

          CHANGED_FILES=$(git diff --staged --name-only)
          
          echo "Changed files: $CHANGED_FILES"
          echo "files=$CHANGED_FILES" >> $GITHUB_OUTPUT
      - name: Prepare CreateCommitOnBranch payload
        id: prepare-payload
        run: |
          FILES=$(echo "${{ steps.changes.outputs.files }}" | tr " " "\n")
          ADDITIONS=""
          for FILE in $FILES; do
            CONTENT=$(cat "$FILE" | base64 | tr -d '\n')
            ADDITIONS+=$(jq -n --compact-output --arg path "$FILE" --arg contents "$CONTENT" '{"path":$path,"contents":$contents}')
            ADDITIONS+=","
          done
          ADDITIONS=${ADDITIONS%,}
          echo "additions=[$ADDITIONS]" >> $GITHUB_OUTPUT

      - name: Get the latest commit SHA
        id: get-sha
        run: echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        
      - name: Add File and Commit
        run: |
          REPO=${{github.repository}}
          BRANCH=${{github.ref_name}}
          MESSAGE="Adding newfile.txt"
          PARENT_COMMIT_SHA=${{steps.get-sha.outputs.sha}}
          ADDITIONS=${{steps.prepare-payload.outputs.additions}}

          echo "Repo: $REPO"
          echo "Branch: $BRANCH"
          echo "Message: $MESSAGE"
          echo "SHA: $PARENT_COMMIT_SHA"
          echo "Additions: $ADDITIONS"

          INPUT=$(jq -n --compact-output \
            --arg repo "$REPO" \
            --arg branch "$BRANCH" \
            --arg message "$MESSAGE" \
            --arg sha "$PARENT_COMMIT_SHA" \
            --argjson additions "$ADDITIONS" \
            '{
              "branch": {
                "repositoryNameWithOwner": $repo,
                "branchName": $branch
              },
              "message": {
                "headline": $message
              },
              "expectedHeadOid": $sha,
              "fileChanges": {
                "additions": $additions
              }
            }')

          echo $INPUT

          export GH_TOKEN=${{ secrets.PAT }}
          # Execute the mutation
          gh api graphql -f query='
          mutation CreateCommit($input: CreateCommitOnBranchInput!) {
            createCommitOnBranch(input: $input) {
              commit {
                oid
                message
                url
              }
            }
          }' -f input="$INPUT"
